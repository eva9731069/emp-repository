{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"onUpdate:modelValue\"];\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_home_layout = _resolveComponent(\"home-layout\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 套用HomeView.vue頁面 \"), _createVNode(_component_home_layout), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.newItem = $event),\n    placeholder: \"新增項目\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.newItem]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.addItem && _ctx.addItem(...args))\n  }, \"新增\")]), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.items, (item, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": $event => item.name = $event\n    }, null, 8 /* PROPS */, _hoisted_1), [[_vModelText, item.name]]), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.updateItem(index)\n    }, \"修改\", 8 /* PROPS */, _hoisted_2), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.deleteItem(index)\n    }, \"刪除\", 8 /* PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createCommentVNode","_createVNode","_component_home_layout","_createElementVNode","type","_ctx","newItem","$event","placeholder","onClick","_cache","args","addItem","_createElementBlock","_Fragment","_renderList","items","item","index","key","name","updateItem","_hoisted_2","deleteItem","_hoisted_3"],"sources":["C:\\Users\\eva97\\emp-repository\\demo\\emp-web\\src\\components\\TestView.vue"],"sourcesContent":["<template>\r\n  <!-- 套用HomeView.vue頁面 -->\r\n  <home-layout />\r\n  <div>\r\n    <div>\r\n      <input type=\"text\" v-model=\"newItem\" placeholder=\"新增項目\">\r\n      <button @click=\"addItem\">新增</button>\r\n    </div>\r\n    <ul>\r\n      <li v-for=\"(item, index) in items\" :key=\"index\">\r\n        <input type=\"text\" v-model=\"item.name\">\r\n        <button @click=\"updateItem(index)\">修改</button>\r\n        <button @click=\"deleteItem(index)\">刪除</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport homeLayout from \"@/components/HomeView.vue\";\r\nimport store from \"../store\";\r\nimport axios from \"axios\";\r\nimport router from \"../router\";\r\n\r\n\r\nexport default {\r\n  components: {\r\n    homeLayout,\r\n  },\r\n  data() {\r\n    return {\r\n      workStatus: \"off\", // 預設為下班狀態\r\n      showSuccessModal: false, // 控制打卡成功視窗的顯示\r\n    };\r\n  },\r\n  methods: {\r\n    setWorkStatus(status) {\r\n      this.workStatus = status;\r\n\r\n      \r\n    },\r\n    clockIn() {\r\n    \r\n    console.log(\"GET_USERNAME=>\"+store.state.empId);\r\n      // 模擬打卡操作，這裡使用setTimeout函數模擬異步操作\r\n      axios\r\n        .post(\"/user/checkIn\", {\r\n          emp_account: this.emp_account,\r\n          emp_password: this.emp_password,\r\n        })\r\n        .then((response) => {\r\n          this.sessionData = response.data;\r\n\r\n          //登入成功後跳轉頁面\r\n          if (this.sessionData != \"\") {\r\n            router.push(\"/home\");\r\n            console.warn(\"signup\", this.emp_account, this.emp_password);\r\n          } else {\r\n            alert(\"登入失敗\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n    },\r\n    closeModal() {\r\n      this.showSuccessModal = false;\r\n    },\r\n  },\r\n  watch: {\r\n    workStatus(newStatus) {\r\n      // 監聽workStatus的變化，當選擇「上班」或「下班」時，自動顯示打卡成功視窗\r\n      if (newStatus === \"on\" || newStatus === \"off\") {\r\n        this.clockIn();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-content {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  text-align: center;\r\n}\r\n\r\nbutton {\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;6DACEA,mBAAA,sBAAyB,EACzBC,YAAA,CAAeC,sBAAA,GACfC,mBAAA,CAYM,cAXJA,mBAAA,CAGM,c,gBAFJA,mBAAA,CAAwD;IAAjDC,IAAI,EAAC,MAAM;+DAAUC,IAAA,CAAAC,OAAO,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAArBH,IAAA,CAAAC,OAAO,E,GACnCH,mBAAA,CAAoC;IAA3BM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,IAAA,CAAAO,OAAA,IAAAP,IAAA,CAAAO,OAAA,IAAAD,IAAA,CAAO;KAAE,IAAE,E,GAE7BR,mBAAA,CAMK,c,kBALHU,mBAAA,CAIKC,SAAA,QAAAC,WAAA,CAJuBV,IAAA,CAAAW,KAAK,GAArBC,IAAI,EAAEC,KAAK;yBAAvBL,mBAAA,CAIK;MAJ+BM,GAAG,EAAED;IAAK,I,gBAC5Cf,mBAAA,CAAuC;MAAhCC,IAAI,EAAC,MAAM;uCAAUa,IAAI,CAACG,IAAI,GAAAb;wDAATU,IAAI,CAACG,IAAI,E,GACrCjB,mBAAA,CAA8C;MAArCM,OAAK,EAAAF,MAAA,IAAEF,IAAA,CAAAgB,UAAU,CAACH,KAAK;OAAG,IAAE,iBAAAI,UAAA,GACrCnB,mBAAA,CAA8C;MAArCM,OAAK,EAAAF,MAAA,IAAEF,IAAA,CAAAkB,UAAU,CAACL,KAAK;OAAG,IAAE,iBAAAM,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}